#summary Explain XML instruction file.

#sidebar TableOfContents 

<font color="red">THIS PAGE IS UNDER CONSTRUCTION</font>

<wiki:toc max_depth="5" />

= Introduction =

This page explains the contents of the XML instruction file.


= getContentItemList =

This is the root element in the instruction file.

*Attributes*
 * none

*Occurrence*
 since it is the root element, one and only one

*Allowed Children*
 * mandatory Children
   * getContentItem (1, 2, ...)
  

*Example*
{{{
<?xml version="1.0" encoding="UTF-8" ?>
<getContentItemList>
...
</getContentItemList>
}}}

== getContentItem ==

A getContentItem defines how and where to get the contents for one specific goal.
The XML element has one attribute called "id".
For example the goal could be to get the list of news titles. The requesting application needs to know the "id" to use to find the corresponding instructions.

Another example could be to fetch a TV guide. Typically a TV guide will consist of several columns, like "Program", "Channel", "Time", .. In such a case there would be three getContentItem's, each with another "id". To avoid having to get the same source (which is typicall an HTML or XML page downloaded over the internet), in such case there would be one first getContentItem whose goal is simply to download the complete page and to store in a String object. Then the next three getContentItem's would use that String as input and get a list of Programs, Channels and Time's; that means also that the source can also be a string supplied by the application.

*Attributes*
 * mandatory attributes
   * id
     A free format text used by the application to define the getContentItem to use.

*Occurrence*
 A getContentItemList must have at least one getContentItem

*Allowed Children*
 * mandatory Children
   * description (1)
   * instructionList (1)
 * optional Children
   * url (0 or 1)

*Example*
{{{
<?xml version="1.0" encoding="UTF-8" ?>
<getContentItemList>
   <getContentItem id="1"> 
...
   </getContentItem>
   <getContentItem id="another free format text"> 
...
   </getContentItem>
...
</getContentItemList>
}}}

=== description ===

This is free format description. Not really used yet.

*Attributes*
 * none

*Occurrence*
 none or one

*Allowed Children*
 none
  

*Example*
{{{
<?xml version="1.0" encoding="UTF-8" ?>
<getContentItemList>
   <getContentItem id="1"> 
      <description>
          Android World forum
      </description>
...
   </getContentItem>
...
</getContentItemList>
}}}

=== url ===

The url where the source needs to be downloaded.
Is optional, in case not present, then application must start the instructionList with source parameter which can again be a url (anything starting with '<') or the actual source content (anything not starting with '<').

*Attributes*
 * none

*Occurrence*
 none or one

*Allowed Children*
 none

*Example*
{{{
<?xml version="1.0" encoding="UTF-8" ?>
<getContentItemList>
   <getContentItem id="1"> 
      <url>
          http://www.androidworld.nl/forum/external.php
      </url>
...
   </getContentItem>
...
</getContentItemList>
}}}


=== instructionList ===

List of instructions to be executed on the source.
Instructions take as input an array of strings. The first instruction can take a string
or a url. There are different instructions, each of them are further explained by giving examples.

*Attributes*
 * none

*Occurrence*
 at least 1

*Allowed Children*
 at least one off :
 * addXMLDeclaration
 * getUnFilteredContent
 * htmlFilter
 * htmlGetter
 * processString
 * toPlainTextString
 * XMLFilter
 * XMLGetter

*Example*
{{{
<?xml version="1.0" encoding="UTF-8" ?>
<getContentItemList>
   <getContentItem id="1"> 

...
   one or more instructions
...
   </getContentItem>
...
</getContentItemList>
}}}

==== addXMLDeclaration ====

Instruction to add an XML declaration on top of the input.
This is useful between an XMLFilter and an XMLGetter. Both XMLFilter and XMLGetter require valid XML as input, but the output of an XMLFilter is typically an array of Strings, with in each String an XML representation of one single XML Element. 
The concatenation of these Strings (ie of the output of the XMLFilter) is not valid XML because it misses an XML Declaration and a root element. There's no need to add a root element because this will be detected when applying the XMLGetter and added by the XMLGetter. 
However, the XML declaration must be added by applying an addXMLdeclaration.

*Attributes*
 none

*Occurrence*
 not defined

*Allowed Children*
 * Mandatory Children
   * version
   * encoding

*Example*

We want to get content from following XML source :

{{{
<?xml version="1.0" encoding="iso-8859-1" ?>
<rss version="2.0"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
  xmlns:admin="http://webns.net/mvcb/"
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
<channel>
 <image>
  <title>optv.nu wat is er nu op tv</title> 
  <url>http://rss.optv.nu/logo.gif</url> 
  <link>http://www.optv.nu/</link> 
  <width>144</width> 
  <height>34</height> 
  <description>OpTv.nu nu / straks op tv</description> 
 </image>
 <title>Nu en Straks Op Tv zaterdag 17/04/2010 11:29</title>
 <item>
<title><![CDATA[NU op tv]]></title>
<pubDate>Sat, 17 Apr 2010 11:29:04 +0200</pubDate>
<category>nu</category>
<description><![CDATA[<table border='1' width='100%' cellpadding='2' cellspacing='0'><tr><td colspan='3'>Nu op tv</td></tr><tr><td valign='top' nowrap>Nederland 1</td><td valign='top' nowrap>11:20-12:20</td><td valign='top' width='100%'>AVRO Kunstuur</td></tr><tr><td valign='top' nowrap>Nederland 2</td><td valign='top' nowrap>11:25-11:55</td><td valign='top' width='100%'>Veda's in deze tijd</td></tr><tr><td valign='top' nowrap>Nederland 3</td><td valign='top' nowrap>11:25-12:10</td><td valign='top' width='100%'>H2O: Just Add Water</td></tr><tr><td valign='top' nowrap>RTL 4</td><td valign='top' nowrap>06:40-11:35</td><td valign='top' width='100%'>Ochtend-tv</td></tr><tr><td valign='top' nowrap>RTL 5</td><td valign='top' nowrap>06:00-15:30</td><td valign='top' width='100%'>Teleshop 5</td></tr><tr><td valign='top' nowrap>SBS 6</td><td valign='top' nowrap>10:00-14:15</td><td valign='top' width='100%'>Tommy Teleshopping</td></tr><tr><td valign='top' nowrap>RTL 7</td><td valign='top' nowrap>01:00-00:00</td><td valign='top' width='100%'>Teleshop</td></tr><tr><td valign='top' nowrap>NET 5</td><td valign='top' nowrap>06:55-13:00</td><td valign='top' width='100%'>Dag-tv</td></tr><tr><td valign='top' nowrap>Veronica</td><td valign='top' nowrap>05:59-00:00</td><td valign='top' width='100%'>Jetix</td></tr><tr><td valign='top' nowrap><a href="http://streams.mtvnetworks.nl/cgi-bin/reflector.cgi?stream=nick_high"><b>Nickelodeon</b></a></td><td valign='top' nowrap>10:50-16:05</td><td valign='top' width='100%'>Pinguins van Madagascar</td></tr><tr><td valign='top' nowrap>Een (1)</td><td valign='top' nowrap>09:00-12:00</td><td valign='top' width='100%'>Lentebeelden</td></tr><tr><td valign='top' nowrap>Ketnet/Canvas</td><td valign='top' nowrap>11:20-11:55</td><td valign='top' width='100%'>Go IV (<a href="http://rss.optv.nu/info.php?id=2758757&o=103">info</a>)<br />Avonturenspel met Sofie Van Moll.</td></tr><tr><td valign='top' nowrap>ARD 1</td><td valign='top' nowrap>11:10-12:00</td><td valign='top' width='100%'>Weiches Fell und scharfe Krallen<br />Dierentuinverhalen.</td></tr><tr><td valign='top' nowrap><a href="http://wwitv.com/t1/6428.asx"><b>ZDF 2</b></a></td><td valign='top' nowrap>11:05-13:00</td><td valign='top' width='100%'>Die K¸chenschlacht - Der Wochenr¸ckblick   =<br />Kookshow.</td></tr><tr><td valign='top' nowrap>WDR 3</td><td valign='top' nowrap>11:10-11:40</td><td valign='top' width='100%'>Die Sendung mit der Maus</td></tr><tr><td valign='top' nowrap>Canvas</td><td valign='top' nowrap>00:45-13:30</td><td valign='top' width='100%'>TerZake<br />Doorlopende herhalingen.</td></tr></table>]]></description>
</item><item>
<title><![CDATA[STRAKS op tv]]></title>
<pubDate>Sat, 17 Apr 2010 11:29:04 +0200</pubDate>
<category>straks</category>
<description><![CDATA[<table border='1' width='100%' cellpadding='2' cellspacing='0'><tr><td colspan='3'>Straks op tv</td></tr><tr><td valign='top' nowrap>Nederland 1</td><td valign='top' nowrap>12:20-13:00</td><td valign='top' width='100%'>Sterren.nl top 20</td></tr><tr><td valign='top' nowrap>Nederland 2</td><td valign='top' nowrap>11:55-12:25</td><td valign='top' width='100%'>Het vermoeden</td></tr><tr><td valign='top' nowrap>Nederland 3</td><td valign='top' nowrap>12:10-13:00</td><td valign='top' width='100%'>Villa Achterwerk - The Popgroep</td></tr><tr><td valign='top' nowrap>RTL 4</td><td valign='top' nowrap>11:35-12:05</td><td valign='top' width='100%'>RTL Autowereld</td></tr><tr><td valign='top' nowrap>RTL 5</td><td valign='top' nowrap>15:30-16:00</td><td valign='top' width='100%'>RTL jobexperience</td></tr><tr><td valign='top' nowrap>SBS 6</td><td valign='top' nowrap>14:15-16:00</td><td valign='top' width='100%'>Diagnosis Murder <tt>(Misdaadserie)</tt></td></tr><tr><td valign='top' nowrap>RTL 7</td><td valign='top' nowrap>00:00-00:00</td><td valign='top' width='100%'></td></tr><tr><td valign='top' nowrap>NET 5</td><td valign='top' nowrap>13:00-14:00</td><td valign='top' width='100%'>Tommy teleshopping<br />Homeshoppingprogramma.</td></tr><tr><td valign='top' nowrap>Veronica</td><td valign='top' nowrap>00:00-00:00</td><td valign='top' width='100%'></td></tr><tr><td valign='top' nowrap><a href="http://streams.mtvnetworks.nl/cgi-bin/reflector.cgi?stream=nick_high"><b>Nickelodeon</b></a></td><td valign='top' nowrap>16:05-17:35</td><td valign='top' width='100%'>Madeline</td></tr><tr><td valign='top' nowrap>Een (1)</td><td valign='top' nowrap>12:00-12:30</td><td valign='top' width='100%'>Televox<br />Magazine van het Belgisch leger.</td></tr><tr><td valign='top' nowrap>Ketnet/Canvas</td><td valign='top' nowrap>11:55-12:20</td><td valign='top' width='100%'>Animalia <tt>(3D-animatieserie)</tt><br />Graeme Base.</td></tr><tr><td valign='top' nowrap>ARD 1</td><td valign='top' nowrap>12:00-12:03</td><td valign='top' width='100%'>Nieuws</td></tr><tr><td valign='top' nowrap><a href="http://wwitv.com/t1/6428.asx"><b>ZDF 2</b></a></td><td valign='top' nowrap>13:00-13:05</td><td valign='top' width='100%'>Nieuws</td></tr><tr><td valign='top' nowrap>WDR 3</td><td valign='top' nowrap>11:40-12:05</td><td valign='top' width='100%'>Die Sendung mit dem Elefanten - mit<br />Elternticker</td></tr><tr><td valign='top' nowrap>Canvas</td><td valign='top' nowrap>13:30-20:00</td><td valign='top' width='100%'>De Canvascollectie<br />La collection RTBF.be/De Canvascollectie in Bozar, in samenwerking met RTBF.  Na de opeenvolgende selectiefasen zullen de 300 geselecteerde werken uit de provincies vanaf 6 mei op de tentoonstelling in Bozar te zien zijn. Reporters Kirsten Lemaire en Elke Jacobs praten met deelnemende kunstenaars. Komen o.a. aan bod in deze aflevering: Sarah van Marcke, Ullysses ost, Sergei Andreev, Els Vermang van Collectief Lab(au) en Hou Chien Cheng. Luc Janssen brengt in een column verslag uit over de preselecties van Luik. Flor Bex, Sophie van Loo, Stef van Bellingen, Johan Pas en Francey Baronian vertegenwoordigen de nationale jury.</td></tr></table>]]></description>
</item><item><title>www.optv.nu</title><description>Deze gegevens zijn u aangeboden door http://www.optv.nu</description>
<pubDate>Sat, 17 Apr 2010 20:00:00 +0200</pubDate>
</item>
</channel>
</rss>
}}}

From this XML we want to get all titles, ie the text within elements with tag "title".

Here's the XML instruction file to start with : 

{{{
<?xml version="1.0" encoding="UTF-8" ?>
<getContentItemList>
   <getContentItem id="1">
      <url>
         <![CDATA[http://rss.optv.nu/tvnustraks2.php]]>
      </url>
      <description>
         <![CDATA[blablabla]]>
      </description>
      <instructionList>
     	<XMLFilter recursive="true">
      		<tagName>
      			title
      		</tagName>
      	</XMLFilter>
       </instructionList>
   </getContentItem>
</getContentItemList>
}}}

and the result would be :

{{{
<title><![CDATA[optv.nu wat is er nu op tv]]></title>
<title><![CDATA[Nu en Straks Op Tv zaterdag 17/04/2010 11:30]]></title>
<title><![CDATA[NU op tv]]></title>
<title><![CDATA[STRAKS op tv]]></title>
<title><![CDATA[www.optv.nu]]></title>
}}}

Now we only want to text in those elements, for which we need to use an XMLGetter instruction. But an XMLGetter requires valid XML as input. So we need to add an XML declaration, then we can apply the XMLGetter. The root element will be added by the XMLGetter.

So here's the extended instruction file that will get us all the titles :
{{{
<getContentItemList>
   <getContentItem id="1">
      <url>
         <![CDATA[http://rss.optv.nu/tvnustraks2.php]]>
      </url>
      <description>
         <![CDATA[blablabla]]>
      </description>
      <instructionList>
         <XMLFilter recursive="true" charsetname="ISO-8859-1">
            <tagName>
               <![CDATA[title]]>
            </tagName>
         </XMLFilter>
         <addXMLDeclaration>
            <version>
               <![CDATA[1.0]]>
            </version>
            <encoding>
               <![CDATA[iso-8859-1]]>
            </encoding>
         </addXMLDeclaration>
         <XMLGetter charsetname="ISO-8859-1">
            <text>
            </text>
         </XMLGetter>
      </instructionList>
   </getContentItem>
</getContentItemList>
}}}

and now the result is 

optv.nu wat is er nu op tv<br>
Nu en Straks Op Tv zaterdag 17/04/2010 11:35<br>
NU op tv<br>
STRAKS op tv<br>
www.optv.nu<br>